{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","this","props","selectedTabId","tabs","onTabSelected","selectedTab","find","tab","id","map","type","onClick","className","classNames","title","content","React","PureComponent","App","state","tabId","setState","item","Component","ReactDOM","render","document","getElementById"],"mappings":"+PAUMA,E,4JACJ,WACE,MAA+CC,KAAKC,MAA5CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,cAEvBC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,KAEhD,OACE,gCAEIC,EAAKM,KAAI,SAACF,GAAD,OACP,wBACEG,KAAK,SACLC,QAAS,kBAAMP,EAAcG,EAAIC,KACjCI,UAAWC,IAAW,SAAU,CAAE,gBAAiBX,IAAkBK,EAAIC,KAH3E,SAKGD,EAAIO,WAIX,qBAAKF,UAAU,UAAf,gBACGP,QADH,IACGA,OADH,EACGA,EAAaU,iB,GApBLC,IAAMC,eA2BVlB,ICjCTI,EAAc,CAClB,CAAEK,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAOpCG,E,4MACJC,MAAQ,CACNd,YAAaF,EAAK,I,EAGpBC,cAAgB,SAACgB,GACS,EAAKD,MAArBd,YAEQG,KAAOY,GACrB,EAAKC,SAAS,CACZhB,YAAaF,EAAKG,MAAK,SAAAgB,GAAI,OAAIA,EAAKd,KAAOY,Q,4CAKjD,WACE,IAAQf,EAAgBL,KAAKmB,MAArBd,YAER,OACE,qCACE,uDACsBA,EAAYS,SAGlC,cAAC,EAAD,CACEX,KAAMA,EACND,cAAeG,EAAYG,GAC3BJ,cAAeJ,KAAKI,uB,GA3BZY,IAAMO,WAkCTL,IC7CfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fddef9b7.chunk.js","sourcesContent":["import React from 'react';\nimport './Tabs.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tabId: string) => void,\n}\n\nclass Tabs extends React.PureComponent<Props, {}> {\n  render() {\n    const { selectedTabId, tabs, onTabSelected } = this.props;\n\n    const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n    return (\n      <div>\n        {\n          tabs.map((tab: Tab) => (\n            <button\n              type=\"button\"\n              onClick={() => onTabSelected(tab.id)}\n              className={classNames('button', { 'button-active': selectedTabId === tab.id })}\n            >\n              {tab.title}\n            </button>\n          ))\n        }\n        <div className=\"content\">\n          {selectedTab?.content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React from 'react';\nimport './App.scss';\nimport Tabs from './components/Tabs/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface State {\n  selectedTab: Tab | undefined,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedTab: tabs[0],\n  };\n\n  onTabSelected = (tabId: string) => {\n    const { selectedTab } = this.state;\n\n    if (selectedTab.id !== tabId) {\n      this.setState({\n        selectedTab: tabs.find(item => item.id === tabId),\n      });\n    }\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n\n    return (\n      <>\n        <h1>\n          {`Selected tab is ${selectedTab.title}`}\n        </h1>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={this.onTabSelected}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}